Metadata-Version: 2.1
Name: housing-price
Version: 0.0.1
Summary: Housing price prediction
Author: anusha polaki
Author-email: anusha.polaki@tigeranalytics.com

<<<<<<< Updated upstream
# Median housing value prediction

The housing data can be downloaded from https://raw.githubusercontent.com/ageron/handson-ml/master/. The script has codes to download the data. We have modelled the median house value on given housing data. 

The following techniques have been used: 

 - Linear regression
 - Decision Tree
 - Random Forest

## Steps performed
 - We prepare and clean the data. We check and impute for missing values.
 - Features are generated and the variables are checked for correlation.
 - Multiple sampling techinuqies are evaluated. The data set is split into train and test.
 - All the above said modelling techniques are tried and evaluated. The final metric used to evaluate is mean squared error.

## To excute the script
python < nonstandardcode.py >

Command to activate environment conda activate mle-dev

command to create env.yml file conda env create -f env.yml

### Installions
pip install black 
pip install isort
pip install flake8

### Fixing errors and formatting code
black nonstandardcode.py 
isort nonstandardcode.py
flake8 --max-linelength 88 nonstandardcode.py
=======
## To excute the script
This code has python files refactored as scripts and are able to install as a package.
All the python scripts are available at `src/housing_price`.
This folder contains `datasets` which has the required datsets along with train and test datasets as csv files.

`housing_price` folder is refactored to a package so it contains `__init__.py`.

This package also contains `tests` folder which has some functional and unit tests for this project.

For installing the `housing_price` package u can just run the below command:

```
(mle-dev) (root-folder)$python setup.py install
```

`setup.py` contains code which will install the required packages and can use as a library.

For running scripts u can run the below command:

(mle-dev) (script-folder)$python3 <script>.py --args

Go to project root directory

First initialize the mlflow by running <mlflow ui> in terminal
1) run the script mlflowrun.py to run the entire ml scripts.
2)To run python script  run python < scriptname.py >
3) results will get displayed in the terminal and all the metrics,parameters,artifacts gets logged into mlflow.

>>>>>>> Stashed changes
